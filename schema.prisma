// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model Url {
  id          String @id @default(cuid())
  linkToBinou String @default("")
}

model ImageUrl {
  id               String @id @default(cuid())
  linkToBinouImage String @default("")
}

model History {
  id           String    @id @default(cuid())
  date         DateTime?
  user         User?     @relation("History_user", fields: [userId], references: [id])
  userId       String?   @map("user")
  entity       String    @default("")
  entityId     String    @default("")
  operation    String?
  before       String?
  after        String?
  inputData    String?
  resolvedData String?

  @@index([userId])
}

model Historized {
  id   String @id @default(cuid())
  name String @default("")
}

model TestRiderOTO {
  id                      String         @id @default(cuid())
  name                    String         @default("")
  from_TestHorseOTO_rider TestHorseOTO[] @relation("TestHorseOTO_rider")
}

model TestHorseOTO {
  id      String        @id @default(cuid())
  name    String        @default("")
  rider   TestRiderOTO? @relation("TestHorseOTO_rider", fields: [riderId], references: [id])
  riderId String?       @map("rider")

  @@index([riderId])
}

model TestRiderOTM {
  id     String         @id @default(cuid())
  name   String         @default("")
  horses TestHorseOTM[] @relation("TestRiderOTM_horses")
}

model TestHorseOTM {
  id                       String         @id @default(cuid())
  name                     String         @default("")
  from_TestRiderOTM_horses TestRiderOTM[] @relation("TestRiderOTM_horses")
}

model TestHorseRelationshipRequired {
  id                                       String                          @id @default(cuid())
  name                                     String                          @default("")
  from_TestRiderRelationshipRequired_horse TestRiderRelationshipRequired[] @relation("TestRiderRelationshipRequired_horse")
}

model TestRiderRelationshipRequired {
  id      String                         @id @default(cuid())
  name    String                         @default("")
  horse   TestHorseRelationshipRequired? @relation("TestRiderRelationshipRequired_horse", fields: [horseId], references: [id])
  horseId String?                        @map("horse")

  @@index([horseId])
}

model User {
  id                String    @id @default(cuid())
  name              String    @default("")
  email             String    @unique @default("")
  password          String
  from_History_user History[] @relation("History_user")
}
